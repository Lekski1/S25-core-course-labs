# This is a basic workflow to help you get started with Actions

name: Python Web-App

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
    paths:
      - 'app_python/**'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'app_python/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: app_python

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Linter
      run: |
        pip install pylint
        pylint app.py

    - name: UnitTests
      run: |
        python -m unittest unit_test/app_test.py -v

  security:
      needs: build
      timeout-minutes: 5
      name: Run Snyk Security Scan
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: "3.12"
            cache: "pip"

        - name: Install Dependencies
          working-directory: app_python
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Install Snyk CLI
          run: |
            npm install -g snyk

        - name: Run Snyk to check for vulnerabilities
          continue-on-error: true
          working-directory: app_python
          run: snyk test --sarif-file-output=snyk.sarif
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        - name: Upload result to GitHub Code Scanning
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: app_python/snyk.sarif

  docker: 
    runs-on: ubuntu-latest
    needs: [build, security]
    defaults:
      run:
        working-directory: app_python

    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container 

    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: docker build and push
      uses: docker/build-push-action@v4
      with:
        context: ./app_python
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/python-web-app:latest
        cache-from: type=gha,scope=primary
        cache-to: type=gha,scope=primary