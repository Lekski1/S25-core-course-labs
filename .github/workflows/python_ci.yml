# This is a basic workflow to help you get started with Actions

name: Python Web-App

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
    paths:
      - 'app_python/**'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'app_python/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: app_python

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Linter
      run: |
        pip install pylint
        pylint app.py

    - name: UnitTests
      run: |
        python -m unittest unit_test/app_test.py -v


  docker: 
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: app_python

    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container 

    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: docker build and push
      uses: docker/build-push-action@v4
      with:
        context: ./app_python
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/python-web-app:latest
        cache-from: type=gha,scope=primary
        cache-to: type=gha,scope=primary

  security:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app_python

    steps:
    - uses: actions/checkout@master
    - name: Debug SNYK_TOKEN
      run: echo "Token is set" || echo "Token is missing"
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    - name: Snyk
      uses: snyk/actions/python@master
      with:
        args: test --file=requirements.txt --package-manager=pip
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}